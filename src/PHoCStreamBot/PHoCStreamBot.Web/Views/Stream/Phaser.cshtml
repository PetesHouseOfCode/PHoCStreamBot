@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="https://fonts.googleapis.com/css?family=Saira+Stencil+One&display=swap" rel="stylesheet">
    <script src="//cdn.jsdelivr.net/npm/phaser@3.19.0/dist/phaser.js"></script>
    <script src="~/lib/signalr/dist/browser/signalr.js"></script>
    <style>
        body{
            margin: 0px;
        }
    </style>
</head>
<body>
    <script>
        var config = {
        type: Phaser.AUTO,
        width: 1920,
        height: 1080,
        physics: {
            default: 'arcade',
            arcade: {
                gravity: { y: 200 }
            }
        },
        scene: {
            preload: preload,
            create: create
        },
        //transparent: true
    };

    var game = new Phaser.Game(config);

    function preload ()
    {
        this.load.image('blue', '/Images/Sprites/bluestar.png');

        //this.load.setBaseURL('');

        //this.load.image('sky', 'assets/skies/space3.png');
        this.load.image('logo', 'https://labs.phaser.io/assets/sprites/phaser3-logo.png');
        this.load.image('red', 'https://labs.phaser.io/assets/particles/red.png');
        //this.load.spritesheet('smoke', '/Images/Sprites/Smoke15Frames.png', { frameWidth: 256, frameHeight: 256 });
    }

    function create ()
    {
        //this.add.image(400, 300, 'sky');

        

        var logo = this.physics.add.image(400, 100, 'logo');

        logo.setVelocity(0, 0);
        logo.setBounce(1, 1);
        logo.setCollideWorldBounds(true);

        //emitter.startFollow(logo);
    }

    var connection = new signalR.HubConnectionBuilder()
        .withUrl("/PHoCStreamBotHub")
        .build();

    connection.on("ExecuteCommand", function(command, args) {
        console.debug("Command executed: " + command);

        if (command.toLowerCase() === "hi_pete") {
            var particles = game.scene.add.particles('red');

            var emitter = particles.createEmitter({
                speed: 400,
                angle: { min: 180, max: 360 },
                scale: { start: 1, end: 0 },
                blendMode:'ADD',
                x: 1920/2,
                y: 1080/2
            });
            setTimeout(() => {
                emitter.distroy();
            }, 5000);
            return;
        }

        if (command === "yell") {
           
            return;
        }
    });

    
    connection
        .start()
        .catch(function(err) {
            return console.error(err.toString());
        });
    </script>
</body>
</html>
